// Example program
#include <iostream>
#include <string>
#include <map>
using namespace std;

class queue{
   node*q;
    public:
     queue(int a) {
		q =new node;
		q->data=a;
		q->last=NULL;
    	}
     int get_q(){ 
      return_q ; 
      } 
      
     void set_q(int a){ 
      q=a; 
      } 
      
     void push(int a) {
		if (last == NULL) {
			node *q = new node(a);
			last=a;
		}
		else
			last->a;
	}
    
    ~ queue(){
        { while (last!=NULL)
        node*temp=last;
        back=back->last;
            }
        
    };


int main()
{
	map <string, int> commands;			//list of commands
	commands["queue"]=1;
	commands["end"]=2;
	commands["push"]=3;
	commands["pop"]=4;

	string s;    
	queue A(0);					//creating an empty queue
							// this zero will be popped in "queue"-case of input

	do{						//command handler
        
		cin>>s;
        
        	int temp;
        	
		switch ( commands[s] ){

			case 1:				// input "queue" - creating the first element of queue: 
        						// deleting temporal zero from queue
                		cin>>temp;		// and create first element from input
		                A.pop();
                		A.push(temp);
             			break;
        	       	
			case 2: 			// input - "end" - ending of inputting
				break; 
        	       	
            		case 3:        			// input "push" - reading element for pushing to queue from input
		                cin>>temp;		 	
                		A.push(temp);
		                break;
